/**
 * File:    Density BldgClass_Waste_111621.cga
 * Created: 17 Nov 2021 04:21:56 GMT
 * Author:  kkenny000
 */

version "2021.0"


################################## CONSTANTS #########################################

const AvgHouseholdSize = 3

const InhabitantsPerBld = AvgHouseholdSize * NumberofHouseholds 

const WasteType = ["Refuse", "Organics", "Paper", "Metal", "Plastic", "Glass", "Textiles", "Other"] 

#lbs of waste per HH by waste type 
wastePerHH(WasteType) = 
	case WasteType == "Refuse": 7.09
	case WasteType == "Organics": 7.93
	case WasteType == "Paper": 9.64
	case WasteType == "Metal": 1.18
	case WasteType == "Plastic": 1.47
	case WasteType == "Glass": 4.41
	case WasteType == "Textiles": 2.41
	case WasteType == "Other": 4.11
	else: 1

						
#Setback: primarily residential 
#Courtyard: primarily mixed residential / commerical 
#Stack: primarily commerical 

const BldgClassType = ["SetBack", "Courtyard", "Stack"]

const BldgSizeType = ["Walkup", "High Rise"]

##### rule that dictates household size based on height, eg: for walkup: if height is between 20-30 ft, randomize number of HH between (8,15)
# Katie in order to do a logic range you need to add another add
# The other way to do this is by using array logic: 
# case BldgSize == "High Rise" && Height .<  [70,80]: rand(70,140)

const NumberofHouseholds =
	case BldgSize == "Walkup" && Height <=40: rand(10,18)
	case BldgSize == "Walkup" && Height >40: rand(16, 30)
	case BldgSize == "High Rise" && Height <=70: rand(60, 120)
	case BldgSize == "High Rise" && Height >70 && Height <=80: rand(70, 140)
	case BldgSize == "High Rise" && Height >80 && Height <=90: rand(80, 160)
	case BldgSize == "High Rise" && Height >90 && Height <=100: rand(90, 180)
	case BldgSize == "High Rise" && Height >100 && Height <=110: rand(100, 200)
	case BldgSize == "High Rise" && Height >110 && Height <=120: rand(110, 220)
	case BldgSize == "High Rise" && Height >120 && Height <=130: rand(120, 240)
	case BldgSize == "High Rise" && Height >130 && Height <=140: rand(130, 260)
	case BldgSize == "High Rise" && Height >140 && Height <=150: rand(140, 300)
	else: 10


######################################### ATTRIBUTES #########################################


##distribute this mix within every 0.5 mile radius (inspo from 15 min city) >> what rule can we use? 
@Enum("SetBack", "Courtyard", "Stack") 
attr BldgClass = 
	40%: BldgClassType[0]
	30%:BldgClassType[1]
	30%: BldgClassType[2]
	else: BldgClassType[3]

# two error that I can see. 
# The enum dataType needs to match the result from the case
# in this case the enum is a string and the output is an integer.
@Enum("Walkup", "High Rise")
attr BldgSize =
	50%: "Walkup"
	else: "High Rise" 
	
@Color
BldgColor = assignBldgColor(BldgClass, BldgSize)
	
Height = 
	case BldgSize == "Walkup": rand(30,50)
	else: rand(60,150)
	
	# The second error is that you are perfoming a logic operaton on the result of extracting a value from an array.
	# You also use this attribute above to compare strings not numbers
	#case BldgSizeType[0]: rand(30,50) 
	#case BldgSizeType[1]: rand(60,150)
	#else: 0

######################################### FUNCTIONS #########################################

/*
#how to write?? 
assignBldgDistribution(BldgClass, BldgSize) =
	case BldgClassType[0]: BldgSizeType[0] == 20%, BldgSizeType[1] == 80%
	case BldgClassType[1]: (80% BldgSizeType[0], 20% BldgSizeType[1])
	case BldgClassType[2]: 40% BldgSizeType[0], 60% BldgSizeType[1]
	 
	 */

# you were missing using th einputs to make a logic comparison
assignBldgColor(BldgClass, BldgSize) = 
	case BldgClass == BldgClassType[0] && BldgSize == BldgSizeType[0]: "#FF0000"
	case BldgClass == BldgClassType[1] && BldgSize ==  BldgSizeType[0]: "#800000"
	case BldgClass == BldgClassType[2] && BldgSize ==  BldgSizeType[0]: "#0000FF"
	case BldgClass == BldgClassType[0] && BldgSize ==  BldgSizeType[1]: "#00FF00"
	case BldgClass == BldgClassType[1] && BldgSize ==  BldgSizeType[1]: "#FFA500"
	case BldgClass ==BldgClassType[2] && BldgSize ==  BldgSizeType[1]: "#90EE90"
	else: "000000"	


#function that gives you total waste per houseHold lbs
averageBuildingWaste(WasteType, NumberofHouseholds) = wastePerHH(WasteType) * NumberofHouseholds


######################################### RULES #########################################

@StartRule
WalkupParcel -->
	extrude(Height)
	color(BldgColor)
	report("Building Class", BldgClass)
	report("People per Bld", InhabitantsPerBld) 
	report("Households per Bld", NumberofHouseholds)
	report("Building Height", BldgSize)
	reportWaste(0, WasteType)

reportWaste(i, list) -->
	case i < size(list):
		report(list[i], i)
		reportWaste(i + 1, list)
	else:
		stop.
		NIL

